What is a gitignore file and what should it include for a Java project?

A gitignore file contains the list of files that we don't want to be traked (put in source control).
These files could be represented as complete filenames, regex expressions (eg all files inside a directory).
For a Java project, this file should include all the files generated by the IDE/editor (if using one), eg '.idea/'(directory), '*.swp'(vim swap files).
It also includes logs and compiled files generated by the code, (external) packages/zipped files, artifacts, eg '*.class', '*.log', '*.zip', '*.rar', '*.war'.


What does fast-forward in Git mean?

A fast-forward in git means moving(forward) the current pointer to a the position pointed by the "head" of the branch being merged.
A fast-forward only when the branch being merged is sequentially ahead of the base branch. It does not work on divergent branches.


Why should you have different branches?

Different branches help in:
1. Better management: eg, separately developing a new feature without affecting the main branch or refactoring code. With a separate brach we can develop and test independently.
2. Always having a running version of your software.
3. Better communication and reviews (through PRs).
4. Better tracking of issues and changes.
5. Better back-tracking to the contributor.


In a project how many remote Git repositories do you usually have?

Typically there is one remote product repository that is used for deployments, tags and versions.
This repository only adds new code using pull requests and its not possible to directly merge into this repository.
Team members for a projects usually have their own remote repositories that they use for working on bugs, features etc and use to raise PR to the product repository.
